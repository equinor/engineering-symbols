name: Package

on:
    pull_request:
        # The branches below must be a subset of the branches above
        branches: [master]
        paths: ['package/**']
    workflow_dispatch:
    workflow_call:
        secrets:
            SNYK_TOKEN:
                required: true
    schedule:
        - cron: '0 6 * * 1'

env:
    NODE_VERSION: ${{ github.event.inputs.node-version  || '16' }}

jobs:
    code-quality:
        name: 'Code Quality'
        uses: equinor/engineering-symbols/.github/workflows/code-quality.yml@master
        secrets:
            SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}

    code_issues:
        name: üëÆ‚Äç‚ôÇÔ∏è Code issues
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v3
            - uses: actions/setup-node@v3
              with:
                  node-version: ${{ env.NODE_VERSION }}
                  cache: 'npm'
            - name: Install dependencies
              run: npm ci
              working-directory: package
            - name: Build library
              run: npm run build:lib
              working-directory: package
    unit_tests:
        name: üß™ Unit tests
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v2
            - uses: actions/setup-node@v2
              with:
                  node-version: ${{ env.NODE_VERSION }}
                  cache: 'npm'
            - name: Install dependencies
              run: npm ci
              working-directory: package
            - name: Run unit tests
              run: npm run test
              working-directory: package
    security_vulnerabilities:
        name: üê© Snyk (Security vulnerabilities)
        if: ${{ github.actor != 'dependabot[bot]' }}
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v2
            - uses: actions/setup-node@v2
              with:
                  node-version: ${{ env.NODE_VERSION }}
                  cache: 'npm'
            - uses: snyk/actions/setup@master
            - name: Install dependencies
              run: npm ci
              working-directory: package
            - name: Authenticator
              run: snyk auth ${{ secrets.SNYK_TOKEN }}
              working-directory: package
            - name: Test dependencies for known issues
              run: snyk test --fail-on=all --severity-threshold=high
              working-directory: package
              env:
                  SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
            - name: Continuously monitor new vulnerabilities
              if: inputs.snyk-monitor
              run: snyk monitor
              working-directory: package
              env:
                  SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
