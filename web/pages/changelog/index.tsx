import type { NextPage } from 'next';
import axios from 'axios';
import Head from 'next/head';
import remarkGfm from 'remark-gfm';

import ReactMarkdown from 'react-markdown';

import styles from './styles.module.css';
import { useEffect, useState } from 'react';
import { Card, Chip, Paper } from '@equinor/eds-core-react';

const Changelog: NextPage = () => {
	// console.log(18, getStaticProps())
	const [data, setData] = useState<any>([]);

	useEffect(() => {
		const getResponse = async () => {
			try {
				return await axios.get('https://api.github.com/repos/equinor/engineering-symbols/releases');
			} catch (error) {
				console.log(error);
			}
		};

		const getData = async () => {
			const res = await getResponse();

			if (!res) return;

			setData(res.data);

			// const entryData = res.data;
			// const entries: any[] = [];

			// for (const entry of entryData) {
			//   entries.push({
			//     body: entry.body
			//     // body: await serialize(entry.body, {
			//     //   mdxOptions: {
			//     //     remarkPlugins: [require('remark-prism'), remarkGfm],
			//     //   },
			//     // }),
			//   });
			// }

			// console.log(898, entries)
		};

		getData();

		const getStaticProps = async () => {
			const apiResult = await axios.get(`https://api.github.com/repos/equinor/engineering-symbols/releases`);
			const entryData = apiResult || [];
			const entries: any[] = [];
			// console.log(28, await apiResult)

			// for (const entry of entryData) {
			//   entries.push({
			//     ...entry,
			//     body: await serialize(entry.body, {
			//       mdxOptions: {
			//         remarkPlugins: [require('remark-prism'), remarkGfm],
			//       },
			//     }),
			//   });
			// }
			// console.log(28, entries)
			// const items = getDocumentationStructure();
			// setData(apiResult)
			return await apiResult;
			// return {
			// 	props: {
			// 		entries,
			// 		// ...getHeaderProps(),
			// 		// documentationProps: { documentationItems: items },
			// 	},
			// };
		};

		// const result = getStaticProps().catch(console.error);;

		// console.log('result =>', result);
	}, []);

	console.log('DATA:', data);

	return (
		<div className={styles.container}>
			<Head>
				<title>1Create Next App</title>
				<meta name="description" content="Generated by create next app" />
				<link rel="icon" href="/favicon.ico" />
			</Head>

			<main className={styles.main}>
				<h1 className={styles.title}>Changelog</h1>

				<div className={styles.changelog}>
					{data &&
						data.map(({ body, tag_name }) => (
							<div className={styles.changelogEl}>
								<p className={styles.changelogVer}>
									<Chip>{tag_name}</Chip>
								</p>
								<div className={styles.changelogDesc}>
									<Card>
										<ReactMarkdown children={body} remarkPlugins={[remarkGfm]} />
									</Card>
								</div>
							</div>
						))}
				</div>
			</main>

			<footer className={styles.footer}>Footer 2</footer>
		</div>
	);
};

export default Changelog;
